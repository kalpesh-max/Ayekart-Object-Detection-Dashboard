{"ast":null,"code":"import _objectSpread from\"C:/Users/ayeka/New folder/react-cctv-dashboard/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const CameraContext=/*#__PURE__*/createContext();export const useCameras=()=>{const context=useContext(CameraContext);if(!context){throw new Error('useCameras must be used within a CameraProvider');}return context;};export const CameraProvider=_ref=>{let{children}=_ref;const[cameras,setCameras]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);// Mock camera data - replace with real API calls\nconst mockCameras=[{id:1,name:'Front Door Camera',location:'Main Entrance',status:'online',ip:'192.168.1.100',rtsp_url:'rtsp://192.168.1.100:554/stream1',last_motion:'2024-01-15T10:30:00Z',recording_status:'recording',storage_used:'2.3 GB',storage_total:'10 GB'},{id:2,name:'Backyard Camera',location:'Garden Area',status:'online',ip:'192.168.1.101',rtsp_url:'rtsp://192.168.1.101:554/stream1',last_motion:'2024-01-15T10:25:00Z',recording_status:'idle',storage_used:'1.8 GB',storage_total:'10 GB'},{id:3,name:'Parking Lot Camera',location:'Vehicle Area',status:'offline',ip:'192.168.1.102',rtsp_url:'rtsp://192.168.1.102:554/stream1',last_motion:'2024-01-15T09:45:00Z',recording_status:'error',storage_used:'0.5 GB',storage_total:'10 GB'}];useEffect(()=>{// Simulate API call\nconst fetchCameras=async()=>{try{setLoading(true);// Simulate network delay\nawait new Promise(resolve=>setTimeout(resolve,1000));setCameras(mockCameras);setError(null);}catch(err){setError('Failed to fetch cameras');setCameras(mockCameras);// Fallback to mock data\n}finally{setLoading(false);}};fetchCameras();},[]);const updateCameraStatus=(cameraId,status)=>{setCameras(prev=>prev.map(cam=>cam.id===cameraId?_objectSpread(_objectSpread({},cam),{},{status}):cam));};const refreshCameras=async()=>{setLoading(true);try{// Simulate refresh\nawait new Promise(resolve=>setTimeout(resolve,500));setCameras([...mockCameras]);}catch(err){setError('Failed to refresh cameras');}finally{setLoading(false);}};const value={cameras,loading,error,updateCameraStatus,refreshCameras};return/*#__PURE__*/_jsx(CameraContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","CameraContext","useCameras","context","Error","CameraProvider","_ref","children","cameras","setCameras","loading","setLoading","error","setError","mockCameras","id","name","location","status","ip","rtsp_url","last_motion","recording_status","storage_used","storage_total","fetchCameras","Promise","resolve","setTimeout","err","updateCameraStatus","cameraId","prev","map","cam","_objectSpread","refreshCameras","value","Provider"],"sources":["C:/Users/ayeka/New folder/react-cctv-dashboard/src/context/CameraContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst CameraContext = createContext();\r\n\r\nexport const useCameras = () => {\r\n  const context = useContext(CameraContext);\r\n  if (!context) {\r\n    throw new Error('useCameras must be used within a CameraProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const CameraProvider = ({ children }) => {\r\n  const [cameras, setCameras] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Mock camera data - replace with real API calls\r\n  const mockCameras = [\r\n    {\r\n      id: 1,\r\n      name: 'Front Door Camera',\r\n      location: 'Main Entrance',\r\n      status: 'online',\r\n      ip: '192.168.1.100',\r\n      rtsp_url: 'rtsp://192.168.1.100:554/stream1',\r\n      last_motion: '2024-01-15T10:30:00Z',\r\n      recording_status: 'recording',\r\n      storage_used: '2.3 GB',\r\n      storage_total: '10 GB'\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Backyard Camera',\r\n      location: 'Garden Area',\r\n      status: 'online',\r\n      ip: '192.168.1.101',\r\n      rtsp_url: 'rtsp://192.168.1.101:554/stream1',\r\n      last_motion: '2024-01-15T10:25:00Z',\r\n      recording_status: 'idle',\r\n      storage_used: '1.8 GB',\r\n      storage_total: '10 GB'\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Parking Lot Camera',\r\n      location: 'Vehicle Area',\r\n      status: 'offline',\r\n      ip: '192.168.1.102',\r\n      rtsp_url: 'rtsp://192.168.1.102:554/stream1',\r\n      last_motion: '2024-01-15T09:45:00Z',\r\n      recording_status: 'error',\r\n      storage_used: '0.5 GB',\r\n      storage_total: '10 GB'\r\n    }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    // Simulate API call\r\n    const fetchCameras = async () => {\r\n      try {\r\n        setLoading(true);\r\n        // Simulate network delay\r\n        await new Promise(resolve => setTimeout(resolve, 1000));\r\n        setCameras(mockCameras);\r\n        setError(null);\r\n      } catch (err) {\r\n        setError('Failed to fetch cameras');\r\n        setCameras(mockCameras); // Fallback to mock data\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchCameras();\r\n  }, []);\r\n\r\n  const updateCameraStatus = (cameraId, status) => {\r\n    setCameras(prev => \r\n      prev.map(cam => \r\n        cam.id === cameraId ? { ...cam, status } : cam\r\n      )\r\n    );\r\n  };\r\n\r\n  const refreshCameras = async () => {\r\n    setLoading(true);\r\n    try {\r\n      // Simulate refresh\r\n      await new Promise(resolve => setTimeout(resolve, 500));\r\n      setCameras([...mockCameras]);\r\n    } catch (err) {\r\n      setError('Failed to refresh cameras');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    cameras,\r\n    loading,\r\n    error,\r\n    updateCameraStatus,\r\n    refreshCameras\r\n  };\r\n\r\n  return (\r\n    <CameraContext.Provider value={value}>\r\n      {children}\r\n    </CameraContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}